{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "For_each_email_pair": {
                "actions": {
                    "Checks_if_HTML_table_has_data": {
                        "actions": {
                            "HTTP-POST_Send_mail_(has_data)": 
                                "inputs": {
                                    "body": {
                                        "message": {
                                            "body": {
                                                "content": " Check emails at @{outputs('Compose_(Select_first_email)')} @{body('Create_HTML_table')}",
                                                "contentType": "HTML"
                                            },
                                            "subject": "You recevied emails at @{outputs('Compose_(Select_first_email)')} ",
                                            "toRecipients": [
                                                {
                                                    "emailAddress": {
                                                        "address": "@{outputs('Compose_(Select_second_email)')}"
                                                    }
                                                }
                                            ]
                                        },
                                        "saveToSentItems": "true"
                                    },
                                    "headers": {
                                        "Authorization": "Bearer @{body('Parse_JSON_to_get_access_token')?['access_token']}",
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "https://graph.microsoft.com/v1.0/users/@{outputs('Compose_(Select_first_email)')}/sendMail"
                                },
                                "runAfter": {},
                                "type": "Http"
                            }
                        },
                        "else": {
                            "actions": {
                                "HTTP-POST_Send_mail_(no_data)": {
                                    "inputs": {
                                        "body": {
                                            "message": {
                                                "body": {
                                                    "content": "No emails received at @{outputs('Compose_(Select_first_email)')} in the past 24 hours.",
                                                    "contentType": "HTML"
                                                },
                                                "subject": "No emails received at @{outputs('Compose_(Select_first_email)')} in the past 24 hours.",
                                                "toRecipients": [
                                                    {
                                                        "emailAddress": {
                                                            "address": "@{outputs('Compose_(Select_second_email)')}"
                                                        }
                                                    }
                                                ]
                                            },
                                            "saveToSentItems": "true"
                                        },
                                        "headers": {
                                            "Authorization": "Bearer @{body('Parse_JSON_to_get_access_token')?['access_token']}",
                                            "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{outputs('Compose_(Select_first_email)')}/sendMail"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "contains": [
                                        "@body('Create_HTML_table')",
                                        "@"
                                    ]
                                }
                            ]
                        },
                        "runAfter": {
                            "Create_HTML_table": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "Compose_(Select_first_email)": {
                        "inputs": "@item()?['values']?[0]?[0]",
                        "runAfter": {
                            "Get_UTC_time_from_24_hours_prior": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "Compose_(Select_second_email)": {
                        "inputs": "@item()?['values']?[0]?[1]",
                        "runAfter": {
                            "Compose_(Select_first_email)": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "Create_HTML_table": {
                        "inputs": {
                            "columns": [
                                {
                                    "header": "Subject",
                                    "value": "@item()?['Subject']"
                                },
                                {
                                    "header": "From",
                                    "value": "@item()?['From']"
                                },
                                {
                                    "header": "Receive_Time",
                                    "value": "@item()?['ReceiveTime']"
                                }
                            ],
                            "format": "HTML",
                            "from": "@variables('emailArray')"
                        },
                        "runAfter": {
                            "For_each_email_message_in_JSON_format": [
                                "Succeeded"
                            ]
                        },
                        "type": "Table"
                    },
                    "For_each_email_message_in_JSON_format": {
                        "actions": {
                            "Append_to_array_variable": {
                                "inputs": {
                                    "name": "emailArray",
                                    "value": "@outputs('Compose_from,_subject,_and_receive_date_from_emails')"
                                },
                                "runAfter": {
                                    "Compose_from,_subject,_and_receive_date_from_emails": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToArrayVariable"
                            },
                            "Combine_converted_time_zone_with_EST": {
                                "inputs": "@concat(outputs('Convert_time_zone')?['body'], ' EST')",
                                "runAfter": {
                                    "Convert_time_zone": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Compose"
                            },
                            "Compose_from,_subject,_and_receive_date_from_emails": {
                                "inputs": {
                                    "From": "@{items('For_each_email_message_in_JSON_format')?['from']?['emailAddress']?['address']}",
                                    "ReceiveTime": "@{outputs('Combine_converted_time_zone_with_EST')}",
                                    "Subject": "@{items('For_each_email_message_in_JSON_format')['subject']}"
                                },
                                "runAfter": {
                                    "Combine_converted_time_zone_with_EST": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Compose"
                            },
                            "Convert_time_zone": {
                                "inputs": {
                                    "baseTime": "@items('For_each_email_message_in_JSON_format')['receivedDateTime']",
                                    "destinationTimeZone": "Eastern Standard Time",
                                    "formatString": "g",
                                    "sourceTimeZone": "UTC"
                                },
                                "kind": "ConvertTimeZone",
                                "runAfter": {},
                                "type": "Expression"
                            }
                        },
                        "foreach": "@body('Parse_HTTP-GET_email_response_to_get_JSON_for_each_email_message')['value']",
                        "runAfter": {
                            "Parse_HTTP-GET_email_response_to_get_JSON_for_each_email_message": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Get_UTC_time_from_24_hours_prior": {
                        "inputs": "@formatDateTime(addHours(utcNow(), -24), 'yyyy-MM-ddTHH:mm:ssZ')",
                        "runAfter": {},
                        "type": "Compose"
                    },
                    "HTTP-GET_email_messages_from_first_email_in_listed_pairs": {
                        "inputs": {
                            "headers": {
                                "Authorization": "Bearer @{body('Parse_JSON_to_get_access_token')?['access_token']}"
                            },
                            "method": "GET",
                            "uri": "https://graph.microsoft.com/v1.0/users/@{outputs('Compose_(Select_first_email)')}/mailFolders/inbox/messages?$filter=receivedDateTime ge @{outputs('Get_UTC_time_from_24_hours_prior')}"
                        },
                        "runAfter": {
                            "Compose_(Select_second_email)": [
                                "Succeeded"
                            ]
                        },
                        "type": "Http"
                    },
                    "Parse_HTTP-GET_email_response_to_get_JSON_for_each_email_message": {
                        "inputs": {
                            "content": "@body('HTTP-GET_email_messages_from_first_email_in_listed_pairs')",
                            "schema": {
                                "properties": {
                                    "value": {
                                        "items": {
                                            "properties": {
                                                "from": {
                                                    "properties": {
                                                        "emailAddress": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "receivedDateTime": {
                                                    "type": "string"
                                                },
                                                "subject": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "subject",
                                                "receivedDateTime",
                                                "from"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "value"
                                ],
                                "type": "object"
                            }
                        },
                        "runAfter": {
                            "HTTP-GET_email_messages_from_first_email_in_listed_pairs": [
                                "Succeeded"
                            ]
                        },
                        "type": "ParseJson"
                    },
                    "Reset_emailArray_variable": {
                        "inputs": {
                            "name": "emailArray",
                            "value": "@variables('emptyArray')"
                        },
                        "runAfter": {
                            "Checks_if_HTML_table_has_data": [
                                "Succeeded"
                            ]
                        },
                        "type": "SetVariable"
                    }
                },
                "foreach": "@body('Parse_JSON')?['value']",
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "concurrency": {
                        "repetitions": 1
                    }
                },
                "type": "Foreach"
            },
            "Get_clientID_from_keyvault": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('emailDigestApp-client-app-ID')}/value"
                },
                "runAfter": {
                    "Initialize_emptyArray_variable": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "secureData": {
                        "properties": [
                            "inputs",
                            "outputs"
                        ]
                    }
                },
                "type": "ApiConnection"
            },
            "Get_clientSecret_from_keyvault": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent('emailDigestApp-clientSecret')}/value"
                },
                "runAfter": {
                    "Get_clientID_from_keyvault": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "secureData": {
                        "properties": [
                            "inputs",
                            "outputs"
                        ]
                    }
                },
                "type": "ApiConnection"
            },
            "HTTP-GET_email_pairs_from_Sharepoint_site_(Email_Digest_excel)": {
                "inputs": {
                    "headers": {
                        "Authorization": "Bearer @{body('Parse_JSON_to_get_access_token')?['access_token']}"
                    },
                    "method": "GET",
                    "uri": "https://graph.microsoft.com/v1.0/drives/xxxxxxxxxxxxxxxxxxxxxxxxxxxxx/workbook/worksheets/Sheet1/tables/Table1/rows"
                },
                "runAfter": {
                    "Parse_JSON_to_get_access_token": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "HTTP-POST_to_get_token_for_email_send_function": {
                "inputs": {
                    "body": "client_id=@{body('Get_clientID_from_keyvault')?['value']}&scope=https%3A%2F%2Fgraph.microsoft.com%2F.default&client_secret=@{body('Get_clientSecret_from_keyvault')?['value']}&grant_type=client_credentials",
                    "headers": {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    "method": "POST",
                    "uri": "https://login.microsoftonline.com/xxxxxxxxxxxxxxxxxxxxxxxxxxxxx/oauth2/v2.0/token"
                },
                "runAfter": {
                    "Get_clientSecret_from_keyvault": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_emailArray_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "emailArray",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_emptyArray_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "emptyArray",
                            "type": "array",
                            "value": []
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_emailArray_variable": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@body('HTTP-GET_email_pairs_from_Sharepoint_site_(Email_Digest_excel)')",
                    "schema": {
                        "properties": {
                            "@@odata.context": {
                                "type": "string"
                            },
                            "value": {
                                "items": {
                                    "properties": {
                                        "@@odata.id": {
                                            "type": "string"
                                        },
                                        "index": {
                                            "type": "integer"
                                        },
                                        "values": {
                                            "items": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "@@odata.id",
                                        "index",
                                        "values"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "HTTP-GET_email_pairs_from_Sharepoint_site_(Email_Digest_excel)": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Parse_JSON_to_get_access_token": {
                "inputs": {
                    "content": "@body('HTTP-POST_to_get_token_for_email_send_function')",
                    "schema": {
                        "properties": {
                            "access_token": {
                                "type": "string"
                            },
                            "expires_in": {
                                "type": "integer"
                            },
                            "ext_expires_in": {
                                "type": "integer"
                            },
                            "token_type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "HTTP-POST_to_get_token_for_email_send_function": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Recurrence": {
                "evaluatedRecurrence": {
                    "frequency": "Day",
                    "interval": 1,
                    "startTime": "2023-05-13T09:00:00",
                    "timeZone": "Eastern Standard Time"
                },
                "recurrence": {
                    "frequency": "Day",
                    "interval": 1,
                    "startTime": "2023-05-13T09:00:00",
                    "timeZone": "Eastern Standard Time"
                },
                "type": "Recurrence"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "keyvault": {
                    "connectionId": "/subscriptions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxx/resourceGroups/logic-dev-emailDigest/providers/Microsoft.Web/connections/keyvault",
                    "connectionName": "keyvault",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    },
                    "id": "/subscriptions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxx/providers/Microsoft.Web/locations/eastus/managedApis/keyvault"
                }
            }
        }
    }
}